# Cross-compilation Containerfile for s390x (runs on x86_64, produces s390x binaries)
FROM --platform=linux/amd64 ubuntu:20.04

# Install cross-compilation toolchain and development tools
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y \
    wget \
    make \
    gcc \
    gcc-s390x-linux-gnu \
    libc6-dev-s390x-cross \
    git \
    rpm2cpio \
    cpio \
    file \
    && rm -rf /var/lib/apt/lists/*

# Install Go for x86_64 (host architecture - will cross-compile to s390x)
RUN wget https://go.dev/dl/go1.22.11.linux-amd64.tar.gz && \
    tar -C /usr/local -xzf go1.22.11.linux-amd64.tar.gz && \
    rm go1.22.11.linux-amd64.tar.gz
ENV PATH=$PATH:/usr/local/go/bin

# Set up directories
RUN mkdir -p /src /output /opt/mqm

# Copy and install MQ RPM files for s390x
COPY mq-rpms/ /tmp/mq-rpms/

# Install IBM MQ Client components (s390x libraries and headers)
RUN cd /tmp/mq-rpms && \
    echo "Installing IBM MQ Runtime for s390x..." && \
    rpm2cpio MQSeriesRuntime-U93028-9.3.0-28.s390x.rpm | cpio -idmv -D / && \
    echo "Installing IBM MQ Client for s390x..." && \
    rpm2cpio MQSeriesClient-U93028-9.3.0-28.s390x.rpm | cpio -idmv -D / && \
    echo "Installing IBM MQ SDK for s390x..." && \
    rpm2cpio MQSeriesSDK-U93028-9.3.0-28.s390x.rpm | cpio -idmv -D / && \
    echo "Reorganizing MQ installation..." && \
    find /opt/mqm -name "inc" -type d -exec cp -r {}/* /opt/mqm/inc/ \; 2>/dev/null || true && \
    find /opt/mqm -name "lib64" -type d -exec cp -r {}/* /opt/mqm/lib64/ \; 2>/dev/null || true && \
    find /opt/mqm -name "lib" -type d -exec cp -r {}/* /opt/mqm/lib64/ \; 2>/dev/null || true && \
    echo "Cleaning up RPM files..." && \
    rm -rf /tmp/mq-rpms

# Verify MQ installation and show actual structure
RUN echo "=== MQ Installation Analysis ===" && \
    echo "Directory structure after RPM extraction:" && \
    find /opt/mqm -type d | head -20 && \
    echo "" && \
    echo "Looking for header files:" && \
    find /opt/mqm -name "*.h" | head -10 && \
    echo "" && \
    echo "Looking for library files:" && \
    find /opt/mqm -name "lib*" -type f | head -10 && \
    echo "" && \
    if [ -d "/opt/mqm/inc" ] && [ -d "/opt/mqm/lib64" ]; then \
        echo "✓ MQ Client installed successfully"; \
        echo "Headers: $(ls /opt/mqm/inc/ | wc -l) files"; \
        echo "Libraries: $(ls /opt/mqm/lib64/ | wc -l) files"; \
        echo "Key header file: $(ls -la /opt/mqm/inc/cmqc.h 2>/dev/null || echo 'cmqc.h not found')"; \
    else \
        echo "⚠ Standard directories not found, but files may be in maintenance structure"; \
        echo "This is normal - we'll use the actual file locations in the build"; \
    fi

# Copy build scripts
COPY scripts/clone-mq-repo.sh /usr/local/bin/clone-mq-repo
COPY scripts/build-mq-collector-cross.sh /usr/local/bin/build-mq-collector
COPY scripts/build-all-cross.sh /usr/local/bin/build-all-cross
COPY scripts/help-cross.sh /usr/local/bin/help.sh

# Make scripts executable
RUN chmod +x /usr/local/bin/clone-mq-repo && \
    chmod +x /usr/local/bin/build-mq-collector && \
    chmod +x /usr/local/bin/build-all-cross && \
    chmod +x /usr/local/bin/help.sh

WORKDIR /src

# Default command shows help information
ENTRYPOINT ["/bin/bash"]
CMD ["/usr/local/bin/help.sh"]
